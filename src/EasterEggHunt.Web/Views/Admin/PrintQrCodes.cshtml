@model PrintQrCodesViewModel
@{
    ViewData["Title"] = $"QR-Codes drucken - {Model.Campaign.Name}";
    Layout = null; // Kein Layout für Druckansicht
}

<!DOCTYPE html>
<html lang="de">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <script src="~/js/qrcode.min.js"></script>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            font-size: 12px;
            line-height: 1.4;
            color: #333;
            background: white;
        }

        .print-header {
            text-align: center;
            margin-bottom: 20px;
            padding-bottom: 10px;
            border-bottom: 2px solid #333;
        }

        .print-header h1 {
            font-size: 24px;
            margin-bottom: 5px;
        }

        .print-header p {
            font-size: 14px;
            color: #666;
        }

        .print-actions {
            margin-top: 15px;
        }

        .btn-print, .btn-close {
            background: #007bff;
            color: white;
            border: none;
            padding: 10px 20px;
            margin: 0 5px;
            border-radius: 5px;
            cursor: pointer;
            font-size: 14px;
            transition: background-color 0.3s;
        }

        .btn-print:hover {
            background: #0056b3;
        }

        .btn-close {
            background: #6c757d;
        }

        .btn-close:hover {
            background: #545b62;
        }

        .qr-codes-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .qr-code-item {
            text-align: center;
            page-break-inside: avoid;
            border: 1px solid #ddd;
            padding: 15px;
            border-radius: 8px;
        }

        .qr-code-image {
            margin-bottom: 10px;
        }

        .qr-code-image div {
            max-width: 100%;
            height: auto;
            border: 1px solid #ccc;
            display: block;
            margin: 0 auto;
        }

        .qr-code-title {
            font-weight: bold;
            font-size: 14px;
            margin-bottom: 5px;
            word-wrap: break-word;
        }

        .qr-code-description {
            font-size: 11px;
            color: #666;
            margin-bottom: 5px;
            word-wrap: break-word;
        }

        .qr-code-url {
            font-size: 10px;
            color: #999;
            word-break: break-all;
        }

        .print-footer {
            margin-top: 30px;
            padding-top: 10px;
            border-top: 1px solid #ddd;
            text-align: center;
            font-size: 10px;
            color: #666;
        }

        .no-qr-codes {
            text-align: center;
            padding: 40px;
            color: #666;
        }

        /* Druck-spezifische Styles */
        @@media print {
            body {
                font-size: 10px;
            }

            .print-header h1 {
                font-size: 20px;
            }

            .print-actions {
                display: none;
            }

            .qr-codes-grid {
                grid-template-columns: repeat(3, 1fr);
                gap: 15px;
            }

            .qr-code-item {
                border: 1px solid #000;
                padding: 10px;
            }

            .qr-code-title {
                font-size: 12px;
            }

            .qr-code-description {
                font-size: 10px;
            }

            .qr-code-url {
                font-size: 9px;
            }

            /* Vermeide Seitenumbrüche innerhalb von QR-Code-Items */
            .qr-code-item {
                page-break-inside: avoid;
            }

            /* Drucken Sie nicht mehr als 2 QR-Codes pro Seite */
            .qr-code-item:nth-child(6n+1) {
                page-break-before: always;
            }
        }

        /* Responsive für kleinere Bildschirme */
        @@media screen and (max-width: 768px) {
            .qr-codes-grid {
                grid-template-columns: repeat(2, 1fr);
                gap: 15px;
            }
        }

        @@media screen and (max-width: 480px) {
            .qr-codes-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="print-header">
        <h1>@Model.Campaign.Name</h1>
        <p>QR-Codes zum Drucken</p>
        <p>Erstellt am @DateTime.Now.ToString("dd.MM.yyyy HH:mm")</p>
        <div class="print-actions">
            <button onclick="window.print()" class="btn-print">
                <i class="fas fa-print"></i> Drucken
            </button>
            <button onclick="window.close()" class="btn-close">
                <i class="fas fa-times"></i> Schließen
            </button>
        </div>
    </div>

    @if (Model.QrCodes.Any())
    {
        <div class="qr-codes-grid">
            @foreach (var qrCode in Model.QrCodes)
            {
                <div class="qr-code-item">
                    <div class="qr-code-image">
                        <div id="qrcode-@qrCode.Id" 
                             data-url="@qrCode.Code" 
                             data-size="@Model.Size"
                             title="@qrCode.Title"></div>
                    </div>
                    
                    @if (Model.ShowTitles)
                    {
                        <div class="qr-code-title">@qrCode.Title</div>
                    }
                    
                    @if (!string.IsNullOrWhiteSpace(qrCode.Description))
                    {
                        <div class="qr-code-description">@qrCode.Description</div>
                    }
                    
                    <div class="qr-code-url" id="qr-url-@qrCode.Id">@qrCode.Code</div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="no-qr-codes">
            <h3>Keine QR-Codes vorhanden</h3>
            <p>Es wurden keine QR-Codes für diese Kampagne gefunden.</p>
        </div>
    }

    <div class="print-footer">
        <p>Easter Egg Hunt System - QR-Code Druckansicht</p>
        <p>Kampagne: @Model.Campaign.Name | QR-Code-Größe: @Model.Size px | Titel: @(Model.ShowTitles ? "Angezeigt" : "Ausgeblendet")</p>
    </div>

    <script>
        // QR-Code-Generierung beim Laden der Seite
        document.addEventListener('DOMContentLoaded', function() {
            generateQrCodes();
        });

        function generateQrCodes() {
            const qrContainers = document.querySelectorAll('div[id^="qrcode-"]');
            
            qrContainers.forEach(container => {
                const relativeUrl = container.getAttribute('data-url');
                const size = parseInt(container.getAttribute('data-size')) || 200;
                
                if (relativeUrl) {
                    try {
                        // URL für QR-Code bestimmen
                        let qrCodeUrl;
                        
                        // Prüfen ob relativeUrl bereits eine vollständige URL ist
                        if (relativeUrl.startsWith('http://') || relativeUrl.startsWith('https://')) {
                            // Bereits vollständige URL - direkt verwenden
                            qrCodeUrl = relativeUrl;
                        } else {
                            // Relative URL - mit aktueller Domain kombinieren
                            const baseUrl = window.location.origin;
                            qrCodeUrl = `${baseUrl}/qr/${encodeURIComponent(relativeUrl)}`;
                        }
                        
                        // QR-Code mit korrekter URL generieren
                        const qrCode = new QRCode(container, {
                            text: qrCodeUrl,
                            width: size,
                            height: size,
                            colorDark: '#000000',
                            colorLight: '#FFFFFF',
                            correctLevel: QRCode.CorrectLevel.M
                        });
                        
                        // URL-Text auch aktualisieren
                        const qrCodeId = container.id.replace('qrcode-', '');
                        const urlElement = document.getElementById(`qr-url-${qrCodeId}`);
                        if (urlElement) {
                            urlElement.textContent = qrCodeUrl;
                        }
                        
                    } catch (error) {
                        console.error('QR-Code-Generierung fehlgeschlagen:', error);
                        // Fallback: Text anzeigen
                        container.innerHTML = '<div style="color: red; text-align: center;">QR-Code Fehler</div>';
                    }
                }
            });
        }

        // Nach dem Drucken zur vorherigen Seite zurückkehren (optional)
        window.onafterprint = function() {
            // Optional: Fenster schließen nach dem Drucken
            // window.close();
        };
    </script>
</body>
</html>
